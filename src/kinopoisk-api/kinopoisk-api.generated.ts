/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/api/v2.1/films/{id}": {
    /** <b>NOTE</b> - Example of response contains full response with all append_to_response parameters. Base request contains only <i>data</i> object. */
    get: {
      parameters: {
        path: {
          /** film id from kinopoisk */
          id: number;
        };
        query: {
          /** comma-separated list of data to add to the response. E.g. <i>append_to_response=BUDGET, RATING, REVIEW, POSTERS</i> .  <b>NOTE - every additional parameter increases response time!</b> */
          append_to_response?: ("BUDGET" | "RATING" | "REVIEW" | "POSTERS")[];
        };
      };
      responses: {
        /** Successful operation */
        200: {
          content: {
            "application/json": components["schemas"]["Film"];
          };
        };
        /** Wrong or empty access token */
        401: unknown;
        /** Film is not found */
        404: unknown;
        /** Too Many Requests. Limit 10 req/sec */
        429: unknown;
      };
    };
  };
  "/api/v2.1/films/{id}/frames": {
    /** Film frames see https://www.kinopoisk.ru/film/301/stills */
    get: {
      parameters: {
        path: {
          /** film id from kinopoisk */
          id: number;
        };
      };
      responses: {
        /** Successful operation */
        200: {
          content: {
            "application/json": components["schemas"]["FilmFrameResponse"];
          };
        };
        /** Wrong or empty access token */
        401: unknown;
        /** Frames are not found */
        404: unknown;
        /** Too Many Requests. Limit 3 req/sec */
        429: unknown;
      };
    };
  };
  "/api/v2.1/films/{id}/videos": {
    /** It returns trailers/teasers for particular kinopoisk film id. There are two available sites: <br/> <ul><li>YOUTUBE - in this case the url field is just youtube link.</li><li>KINOPOISK_WIDGET - in this case the url field is video inside kinopoisk widget. E.g. https://widgets.kinopoisk.ru/discovery/trailer/123573?onlyPlayer=1&autoplay=1&cover=1. If you want to include kinopoisk widget into your page you should do something like: <br/><br/>&lt;script src=&quot;https://unpkg.com/@ungap/custom-elements-builtin&quot;&gt;&lt;/script&gt;<br/>&lt;script type=&quot;module&quot; src=&quot;https://unpkg.com/x-frame-bypass&quot;&gt;&lt;/script&gt;<br/>&lt;iframe is=&quot;x-frame-bypass&quot; src=&quot;https://widgets.kinopoisk.ru/discovery/trailer/167560?onlyPlayer=1&amp;autoplay=1&amp;cover=1&quot; width=&quot;500&quot; height=&quot;500&quot;&gt;&lt;/iframe&gt;</li></ul> */
    get: {
      parameters: {
        path: {
          /** film id from kinopoisk */
          id: number;
        };
      };
      responses: {
        /** Successful operation */
        200: {
          content: {
            "application/json": components["schemas"]["VideoResponse"];
          };
        };
        /** Wrong or empty access token */
        401: unknown;
        /** Videos are not found */
        404: unknown;
        /** Too Many Requests. Limit 3 req/sec */
        429: unknown;
      };
    };
  };
  "/api/v2.1/films/{id}/studios": {
    /** Film studios. For example https://www.kinopoisk.ru/film/301/studio/ */
    get: {
      parameters: {
        path: {
          /** film id from kinopoisk */
          id: number;
        };
      };
      responses: {
        /** Successful operation */
        200: {
          content: {
            "application/json": components["schemas"]["FilmStudioResponse"];
          };
        };
        /** Wrong or empty access token */
        401: unknown;
        /** Studios are not found */
        404: unknown;
        /** Too Many Requests. Limit 0.5 req/sec */
        429: unknown;
      };
    };
  };
  "/api/v2.1/films/{id}/sequels_and_prequels": {
    /** sequels and prequels */
    get: {
      parameters: {
        path: {
          /** film id from kinopoisk */
          id: number;
        };
      };
      responses: {
        /** Successful operation */
        200: {
          content: {
            "application/json": components["schemas"]["FilmSequelsAndPrequelsResponse"][];
          };
        };
        /** Wrong or empty access token */
        401: unknown;
        /** Film is not found */
        404: unknown;
        /** Too Many Requests. Limit 10 req/sec */
        429: unknown;
      };
    };
  };
  "/api/v2.1/films/search-by-keyword": {
    /** Return set of films with pagination. Each page contains no more than 20 films */
    get: {
      parameters: {
        query: {
          /** keywords for searching film */
          keyword: string;
          /** page number */
          page?: number;
        };
      };
      responses: {
        /** Successful operation */
        200: {
          content: {
            "application/json": components["schemas"]["FilmSearchResponse"];
          };
        };
        /** Wrong or empty access token */
        401: unknown;
        /** Films are not found */
        404: unknown;
        /** Too Many Requests. Limit 5 req/sec */
        429: unknown;
      };
    };
  };
  "/api/v2.1/films/filters": {
    /** Return set of countries and genres id to use them to filter out films in /api/v2.1/films/search-by-filters */
    get: {
      responses: {
        /** Successful operation */
        200: {
          content: {
            "application/json": components["schemas"]["FiltersResponse"];
          };
        };
        /** Wrong or empty access token */
        401: unknown;
        /** Filters are not found */
        404: unknown;
        /** Too Many Requests. Limit 10 req/sec */
        429: unknown;
      };
    };
  };
  "/api/v2.1/films/search-by-filters": {
    /** Return set of films with pagination. Each page contains no more than 20 films. <i>See /api/v2.1/films/filters to get possible genres and countries ids. </i> */
    get: {
      parameters: {
        query: {
          /** comma-separated list of country ids. E.g. <i>country=1,2,3</i> */
          country?: number[];
          /** comma-separated list of genre ids. E.g. <i>genre=1,2,3</i> */
          genre?: number[];
          /** order of sorting */
          order?: "RATING" | "NUM_VOTE" | "YEAR";
          /** type of entity */
          type?: "FILM" | "TV_SHOW" | "ALL";
          /** min rating */
          ratingFrom?: number;
          /** max rating */
          ratingTo?: number;
          /** min year */
          yearFrom?: number;
          /** max year */
          yearTo?: number;
          /** page number */
          page?: number;
        };
      };
      responses: {
        /** Successful operation */
        200: {
          content: {
            "application/json": components["schemas"]["FilmSearchByFiltersResponse"];
          };
        };
        /** Wrong or empty access token */
        401: unknown;
        /** Films are not found */
        404: unknown;
        /** Too Many Requests. Limit 10 req/sec */
        429: unknown;
      };
    };
  };
  "/api/v2.2/films/top": {
    /** Return set of films with pagination. Each page contains no more than 20 films */
    get: {
      parameters: {
        query: {
          /** type of top */
          type?:
            | "TOP_250_BEST_FILMS"
            | "TOP_100_POPULAR_FILMS"
            | "TOP_AWAIT_FILMS";
          /** page number */
          page?: number;
        };
      };
      responses: {
        /** Successful operation */
        200: {
          content: {
            "application/json": components["schemas"]["FilmTopResponse"];
          };
        };
        /** Wrong or empty access token */
        401: unknown;
        /** Too Many Requests. Limit 3 req/sec */
        429: unknown;
      };
    };
  };
  "/api/v2.2/films/{id}/similars": {
    get: {
      parameters: {
        path: {
          /** film id from kinopoisk */
          id: number;
        };
      };
      responses: {
        /** Successful operation */
        200: {
          content: {
            "application/json": components["schemas"]["RelatedFilmResponse"];
          };
        };
        /** Wrong or empty access token */
        401: unknown;
        /** Too Many Requests. Limit 10 req/sec */
        429: unknown;
      };
    };
  };
  "/api/v2.1/films/releases": {
    /** Digital releases see https://www.kinopoisk.ru/comingsoon/digital/ */
    get: {
      parameters: {
        query: {
          /** releases will be shown for this year */
          year: number;
          /** releases will be shown for this month */
          month:
            | "JANUARY"
            | "FEBRUARY"
            | "MARCH"
            | "APRIL"
            | "MAY"
            | "JUNE"
            | "JULY"
            | "AUGUST"
            | "SEPTEMBER"
            | "OCTOBER"
            | "NOVEMBER"
            | "DECEMBER";
          /** page */
          page?: number;
        };
      };
      responses: {
        /** Successful operation */
        200: {
          content: {
            "application/json": components["schemas"]["DigitalReleaseResponse"];
          };
        };
        /** Wrong or empty access token */
        401: unknown;
        /** Films are not found */
        404: unknown;
        /** Too Many Requests. Limit 10 req/sec */
        429: unknown;
      };
    };
  };
  "/api/v1/reviews": {
    /** Return set of reviews with pagination. Each page contains no more than 20 reviews. Note - the description field contains short data. Full data can be retrieved from details endpoint /api/v1/reviews/details */
    get: {
      parameters: {
        query: {
          /** film id from kinopoisk */
          filmId: number;
          /** page number. Max value is 999 */
          page?: number;
        };
      };
      responses: {
        /** Successful operation */
        200: {
          content: {
            "application/json": components["schemas"]["ReviewsResponse"];
          };
        };
        /** Wrong or empty access token */
        401: unknown;
        /** Reviews are not found */
        404: unknown;
        /** Too Many Requests. Limit 10 req/sec */
        429: unknown;
      };
    };
  };
  "/api/v1/reviews/details": {
    /** Return full data for particular review id */
    get: {
      parameters: {
        query: {
          /** review id from kinopoisk */
          reviewId: number;
        };
      };
      responses: {
        /** Successful operation */
        200: {
          content: {
            "application/json": components["schemas"]["ReviewDetailsResponse"];
          };
        };
        /** Wrong or empty access token */
        401: unknown;
        /** Review is not found */
        404: unknown;
        /** Too Many Requests. Limit 10 req/sec */
        429: unknown;
      };
    };
  };
  "/api/v1/staff": {
    get: {
      parameters: {
        query: {
          /** film id from kinopoisk */
          filmId: number;
        };
      };
      responses: {
        /** Successful operation */
        200: {
          content: {
            "application/json": components["schemas"]["StaffResponse"][];
          };
        };
        /** Wrong or empty access token */
        401: unknown;
        /** Staff is not found */
        404: unknown;
        /** Too Many Requests. Limit 10 req/sec */
        429: unknown;
      };
    };
  };
  "/api/v1/staff/{id}": {
    get: {
      parameters: {
        path: {
          /** person id from kinopoisk */
          id: number;
        };
      };
      responses: {
        /** Successful operation */
        200: {
          content: {
            "application/json": components["schemas"]["PersonResponse"];
          };
        };
        /** Wrong or empty access token */
        401: unknown;
        /** Staff is not found */
        404: unknown;
        /** Too Many Requests. Limit 10 req/sec */
        429: unknown;
      };
    };
  };
}

export interface components {
  schemas: {
    Film: {
      data: components["schemas"]["CommonFilmData"];
      rating: components["schemas"]["Rating"];
      budget: components["schemas"]["Budget"];
      review: components["schemas"]["Review"];
      externalId: components["schemas"]["ExternalId"];
      images?: components["schemas"]["Images"];
    };
    Season: {
      number: number;
      episodes: components["schemas"]["Episode"][];
    };
    Episode: {
      seasonNumber: number;
      episodeNumber: number;
      nameRu: string;
      nameEn: string;
      synopsis: string;
      releaseDate: string;
    };
    Country: {
      country: string;
    };
    Genre: {
      genre: string;
    };
    FiltersResponse: {
      genres: components["schemas"]["FiltersResponse_genres"][];
      countries: components["schemas"]["FiltersResponse_countries"][];
    };
    FilmSearchResponse: {
      keyword: string;
      pagesCount: number;
      searchFilmsCountResult: number;
      films: components["schemas"]["FilmSearchResponse_films"][];
    };
    FilmSearchByFiltersResponse: {
      pagesCount: number;
      films: components["schemas"]["FilmSearchResponse_films"][];
    };
    FilmSequelsAndPrequelsResponse: {
      filmId: number;
      nameRu: string;
      nameEn: string;
      posterUrl: string;
      posterUrlPreview: string;
      relationType: "SEQUEL" | "PREQUEL" | "REMAKE" | "UNKNOWN";
    };
    RelatedFilmResponse: {
      total: number;
      items: components["schemas"]["RelatedFilmResponse_items"][];
    };
    FilmTopResponse: {
      pagesCount: number;
      films: components["schemas"]["FilmTopResponse_films"][];
    };
    ReviewsResponse: {
      page: number;
      filmId: number;
      reviewAllCount: number;
      reviewAllPositiveRatio: string;
      reviewPositiveCount: number;
      reviewNegativeCount: number;
      reviewNeutralCount: number;
      pagesCount: number;
      reviews: components["schemas"]["ReviewsResponse_reviews"][];
    };
    ReviewDetailsResponse: {
      reviewId: number;
      reviewType: "POSITIVE" | "NEGATIVE" | "NEUTRAL" | "UNKNOWN";
      reviewData: string;
      userPositiveRating: number;
      userNegativeRating: number;
      reviewAutor: string;
      reviewTitle: string;
      reviewDescription: number;
    };
    StaffResponse: {
      staffId: number;
      nameRu: string;
      nameEn: string;
      posterUrl: string;
      professionText: string;
      professionKey:
        | "WRITER"
        | "OPERATOR"
        | "EDITOR"
        | "COMPOSER"
        | "PRODUCER_USSR"
        | "TRANSLATOR"
        | "DIRECTOR"
        | "DESIGN"
        | "PRODUCER"
        | "ACTOR"
        | "VOICE_DIRECTOR"
        | "UNKNOWN";
    };
    PersonResponse: {
      personId: number;
      webUrl: string;
      nameRu: string;
      nameEn: string;
      sex: "MALE" | "FEMALE";
      posterUrl: string;
      growth: string;
      birthday: string;
      death: string;
      age: number;
      birthplace: string;
      deathplace: string;
      hasAwards: number;
      profession: string;
      facts: string[];
      spouses: components["schemas"]["PersonResponse_spouses"][];
      films: components["schemas"]["PersonResponse_films"][];
    };
    FilmFrameResponse: {
      frames: components["schemas"]["FilmFrameResponse_frames"][];
    };
    DigitalReleaseResponse: {
      page: number;
      total: number;
      releases: components["schemas"]["DigitalReleaseItem"][];
    };
    DigitalReleaseItem: {
      filmId: number;
      nameRu: string;
      nameEn: string;
      year: number;
      posterUrl: string;
      posterUrlPreview: string;
      countries: components["schemas"]["Country"][];
      genres: components["schemas"]["Genre"][];
      rating: number;
      ratingVoteCount: number;
      expectationsRating: number;
      expectationsRatingVoteCount: number;
      duration: number;
      releaseDate: string;
    };
    CommonFilmData: {
      filmId: number;
      nameRu: string;
      nameEn: string;
      webUrl: string;
      posterUrl: string;
      posterUrlPreview: string;
      year: string;
      filmLength: string;
      slogan: string;
      description: string;
      type?: "FILM" | "TV_SHOW" | "UNKNOWN";
      ratingMpaa: string;
      ratingAgeLimits: number;
      premiereRu: string;
      distributors: string;
      premiereWorld: string;
      premiereDigital?: string;
      premiereWorldCountry: string;
      premiereDvd: string;
      premiereBluRay: string;
      distributorRelease: string;
      countries: components["schemas"]["Country"][];
      genres: components["schemas"]["Genre"][];
      facts: string[];
      seasons: components["schemas"]["Season"][];
    };
    Rating: {
      rating: number;
      ratingVoteCount: number;
      ratingImdb: number;
      ratingImdbVoteCount: number;
      ratingFilmCritics: string;
      ratingFilmCriticsVoteCount: number;
      ratingAwait?: string;
      ratingAwaitCount?: number;
      ratingRfCritics?: string;
      ratingRfCriticsVoteCount?: number;
    };
    Budget: {
      grossRu: number;
      grossUsa: number;
      grossWorld: number;
      budget: string;
      marketing: number;
    };
    Review: {
      reviewsCount: number;
      ratingGoodReview: string;
      ratingGoodReviewVoteCount: number;
    };
    ExternalId: {
      imdbId: string;
    };
    VideoResponse: {
      trailers: components["schemas"]["VideoResponse_trailers"][];
      teasers: components["schemas"]["VideoResponse_teasers"][];
    };
    FilmStudioResponse: {
      production: string;
      filming: string;
      imageFormat: string;
      camera: string;
      copyFormat: string;
      filmingFormat: string;
      image: string;
      language: string;
      productionStudios: components["schemas"]["FilmStudioResponse_productionStudios"][];
      specialEffectsStudios: components["schemas"]["FilmStudioResponse_specialEffectsStudios"][];
      dubbingStudios: components["schemas"]["FilmStudioResponse_dubbingStudios"][];
      rentStudios: components["schemas"]["FilmStudioResponse_rentStudios"][];
    };
    Images: {
      posters: components["schemas"]["Images_posters"][];
      backdrops: components["schemas"]["Images_posters"][];
    };
    FiltersResponse_genres: {
      id?: number;
      genre?: string;
    };
    FiltersResponse_countries: {
      id?: number;
      country?: string;
    };
    FilmSearchResponse_films: {
      filmId?: number;
      nameRu?: string;
      nameEn?: string;
      type?: "FILM" | "TV_SHOW" | "UNKNOWN";
      year?: string;
      description?: string;
      filmLength?: string;
      countries?: components["schemas"]["Country"][];
      genres?: components["schemas"]["Genre"][];
      rating?: string;
      ratingVoteCount?: number;
      posterUrl?: string;
      posterUrlPreview?: string;
    };
    RelatedFilmResponse_items: {
      filmId?: number;
      nameRu?: string;
      nameEn?: string;
      posterUrl?: string;
      posterUrlPreview?: string;
      relationType?: "SIMILAR";
    };
    FilmTopResponse_films: {
      filmId?: number;
      nameRu?: string;
      nameEn?: string;
      year?: string;
      filmLength?: string;
      countries?: components["schemas"]["Country"][];
      genres?: components["schemas"]["Genre"][];
      rating?: number;
      ratingVoteCount?: number;
      posterUrl?: string;
      posterUrlPreview?: string;
    };
    ReviewsResponse_reviews: {
      reviewId?: number;
      reviewType?: "POSITIVE" | "NEGATIVE" | "NEUTRAL" | "UNKNOWN";
      reviewData?: string;
      userPositiveRating?: string;
      userNegativeRating?: string;
      reviewAutor?: string;
      reviewTitle?: string;
      reviewDescription?: number;
    };
    PersonResponse_spouses: {
      personId?: number;
      name?: string;
      divorced?: boolean;
      divorcedReason?: string;
      sex?: "MALE" | "FEMALE";
      children?: number;
      webUrl?: string;
      relation?: string;
    };
    PersonResponse_films: {
      filmId?: number;
      nameRu?: string;
      nameEn?: string;
      rating?: string;
      general?: boolean;
      description?: string;
      professionKey?:
        | "WRITER"
        | "OPERATOR"
        | "EDITOR"
        | "COMPOSER"
        | "PRODUCER_USSR"
        | "HIMSELF"
        | "HERSELF"
        | "HRONO_TITR_MALE"
        | "HRONO_TITR_FEMALE"
        | "TRANSLATOR"
        | "DIRECTOR"
        | "DESIGN"
        | "PRODUCER"
        | "ACTOR"
        | "VOICE_DIRECTOR"
        | "UNKNOWN";
    };
    FilmFrameResponse_frames: {
      image?: string;
      preview?: string;
    };
    VideoResponse_trailers: {
      url?: string;
      name?: string;
      site?: string;
      size?: number;
      type?: string;
    };
    VideoResponse_teasers: {
      url?: string;
      name?: string;
      site?: string;
      size?: number;
      type?: string;
    };
    FilmStudioResponse_productionStudios: {
      name?: string;
      notes?: string;
    };
    FilmStudioResponse_specialEffectsStudios: {
      name?: string;
      notes?: string;
    };
    FilmStudioResponse_dubbingStudios: {
      name?: string;
      notes?: string;
    };
    FilmStudioResponse_rentStudios: {
      name?: string;
      notes?: string;
    };
    Images_posters: {
      language?: string;
      url?: string;
      height?: number;
      width?: number;
    };
  };
}

export interface operations {}
